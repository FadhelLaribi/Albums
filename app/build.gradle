plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "fr.lbc.albums"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "fr.lbc.albums.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://static.leboncoin.fr\""
        }

        debug {
            buildConfigField "String", "BASE_URL", "\"https://static.leboncoin.fr\""
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {

    // Android Ktx
    implementation "androidx.core:core-ktx:${versions.androidxCoreKtx}"
    implementation "androidx.fragment:fragment-ktx:${versions.androidxFragmentKtx}"

    implementation "androidx.room:room-ktx:${versions.room}"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"

    // UI
    implementation "androidx.appcompat:appcompat:${versions.androidxAppCompat}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.androidxConstraintLayout}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${versions.androidxSwipeRefresh}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    // Persistence
    implementation "androidx.room:room-runtime:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"

    // Concurrency
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"

    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    // DI
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    kapt "com.google.dagger:hilt-compiler:${versions.hilt}"

    // Logging
    implementation "com.jakewharton.timber:timber:${versions.timber}"

    // Test
    testImplementation "junit:junit:${versions.jUnit}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    testImplementation "androidx.arch.core:core-testing:${versions.androidxArchTesting}"

    androidTestImplementation "androidx.test.ext:junit:${versions.androidxTestJUnit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.androidxTestEspresso}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    androidTestImplementation "com.google.dagger:hilt-android-testing:${versions.hilt}"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${versions.hilt}"

}